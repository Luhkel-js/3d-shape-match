1.FUSS: A Universal and Flexible Framework for Unsupervised Statistical Shape Model Learning
无监督的三维形状匹配方法，使用解剖学模型。

#windows：
成功复现，但是显存容量不够,出现以下报错：
 Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 196.00 MiB (GPU 0; 12.00 GiB total capacity; 5.75 GiB already allocated; 3.81 GiB free; 6.30 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF

#Ubuntu：
配置环境
使用wheels安装
成功运行

#学习到的知识点：
1.选择训练时的gpu
self.opt = opt
        #choose which gpu cuda:1
        self.device = torch.device('cuda:1' if opt['num_gpu'] != 0 else 'cpu')
        self.is_train = opt['is_train']

2.训练参数设置
num_workers 为数据加载时使用的线程数，主要依据CPU的核心数，取4 8 12 等。 linux中查看cpu核心数的代码：nproc

3.查看GPU占用情况
Every 0.5s:nvidia-smi

#在train过程中出现下面报错：
fmap_network.py line 74:
D_i = torch.cat([torch.diag(D[bs, i, :].flatten()).unsqueeze(0) for bs in range(evals_y.shape[0])],
IndexError: index 16 is out of bounds for dimension 1 with size 16
初步怀疑是训练配置参数问题
确定为网格数据集的顶点数和面数不一致的问题，需要将网格数据进行统一处理。
数据集统一转化为5000个顶点，10000个面，开始正常训练。
特征向量个数：n_eig=200  共15epoch 

4.评价指标
**Geodesic Error（测地误差）** 
是衡量 3D 曲面上两点之间最短路径（测地线）的距离偏差，是评估 3D 形状匹配（Shape Matching）中点对应关系准确性的核心指标。
在曲面几何中，两点间的测地线是沿着曲面表面的最短路径，而非空间中的直线距离（欧氏距离），因此能更准确反映曲面变形下的几何对应关系。

